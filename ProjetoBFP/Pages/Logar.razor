@page "/"
@inject NavigationManager Navigation
@inject LoginClient AuthService
@using Microsoft.AspNetCore.Components.Forms

<section class="Background">
    <div class="container">
        <div class="login-container">
            <div class="left-panel">
                <h1>Bem-vindo</h1>
                <p>Faça seu login para prosseguir</p>
                <img src="./src/pc_img_login.png" alt="Computador" />
            </div>

            <div class="right-panel">
                <h1>Login</h1>

                <EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <div class="inputs">

                        <InputText type="email"
                                   id="email"
                                   class="form-control"
                                   placeholder="Email"
                                   @bind-Value="loginModel.Email" />

                        <InputText type="password"
                                   id="password"
                                   class="form-control"
                                   placeholder="Senha"
                                   @bind-Value="loginModel.Senha" />
                    </div>
                    <button type="submit" class="login-button">Entrar</button>

                    <p>Ainda não tem login? <NavLink href="/Cadastro">Cadastro</NavLink></p>
                </EditForm>
                  @if (!string.IsNullOrEmpty(errorMessage))
                {
                    <p class="text-danger">@errorMessage</p>
                }
            </div>
        </div>
    </div>
</section>

@code {
    private Login loginModel = new Login();
    private string? errorMessage;

    private async Task HandleLogin()
    {
        errorMessage = string.Empty;

        try
        {
            var result = await AuthService.LoginAsync(loginModel);

            if (result.Success)
            {
                Console.WriteLine($"Login realizado com sucesso: {result.Message}");
                Navigation.NavigateTo("/Home");
            }
            else
            {
                errorMessage = result.Message;
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Ocorreu um erro: {ex.Message}";
        }
    }
}