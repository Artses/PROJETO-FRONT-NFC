@page "/Alunos"
@inject AlunosClient chamadaClient

<div class="header">
    <div class="logo">
        <img src="/src/logobfp-fotor-20241126174159.png" class="logo-img">
    </div>
    <h1 class="titulo">Lista de presença</h1>
    <nav class="nav">
        <div class="buttons">
            <a href="/Home">
                <i class="fas fa-home"></i>
                <svg class="svg" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512">
                    <path d="M288 0L0 288h64v224h128V384h128v128h128V288h64L288 0z" />
                </svg>
            </a>
            <a href="/Alunos">
                <i class="fas fa-save"></i>
                <svg class="svg" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
                    <path d="M432 64L208 64c-8.8 0-16 7.2-16 16l0 16-64 0 0-16c0-44.2 35.8-80 80-80L432 0c44.2 0 80 35.8 80 80l0 224c0 44.2-35.8 80-80 80l-16 0 0-64 16 0c8.8 0 16-7.2 16-16l0-224c0-8.8-7.2-16-16-16zM0 192c0-35.3 28.7-64 64-64l256 0c35.3 0 64 28.7 64 64l0 256c0 35.3-28.7 64-64 64L64 512c-35.3 0-64-28.7-64-64L0 192zm64 32c0 17.7 14.3 32 32 32l192 0c17.7 0 32-14.3 32-32s-14.3-32-32-32L96 192c-17.7 0-32 14.3-32 32z" />
                </svg>
            </a>
            <a href="/Scannear">
                <i class="fas fa-check"></i>
                <svg class="svg" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
                    <path d="M207.4 493.1l-7.4 7.4c-9.4 9.4-24.6 9.4-34 0l-166-166c-9.4-9.4-9.4-24.6 0-34l7.4-7.4c9.4-9.4 24.6-9.4 34 0l145.6 145.6 258.8-258.8c9.4-9.4 24.6-9.4 34 0l7.4 7.4c9.4 9.4 9.4 24.6 0 34L207.4 493.1z" />
                </svg>
            </a>
            <a href="/">
                <svg class="svg" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
                    <path d="M256 48a208 208 0 1 1 0 416 208 208 0 1 1 0-416zm0 464A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM175 175c-9.4 9.4-9.4 24.6 0 33.9l47 47-47 47c-9.4 9.4-9.4 24.6 0 33.9s24.6 9.4 33.9 0l47-47 47 47c9.4 9.4 24.6 9.4 33.9 0s9.4-24.6 0-33.9l-47-47 47-47c9.4-9.4 9.4-24.6 0-33.9s-24.6-9.4-33.9 0l-47 47-47-47c-9.4-9.4-24.6-9.4-33.9 0z" />
                </svg>
                <i class="fas fa-times"></i>
            </a>
        </div>
    </nav>
</div>
<body>
    <section class="section-form">
        <div class="filter">
            <input  class="input-id" type="text" @bind="searchId" placeholder="Insira o ID do aluno" />
            <button class="button-id" @onclick="FiltrarChamadas">Filtrar</button>
            <button class="button-id" @onclick="LimparFiltro">Limpar</button>
        </div>
        <table class="table">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Matricula</th>
                    <th>Nome</th>
                    <th>Status</th>
                    <th>Data</th>
                </tr>
            </thead>
            @foreach (var aluno in chamadasFiltradas)
                {
                <tbody>
                    <td>@aluno.Id</td>
                    <td>@aluno.AlunoId</td>
                    <td>@aluno.AlunoNome</td>
                    <td>@aluno.Tipo</td>
                    <td>@DateTime.Parse(aluno.Data).ToString("dd/MM/yyyy HH:mm")</td>
                </tbody>
                }
        </table>
    </section>
</body>

<footer class="text-center text-white ">
    <div class="text-center p-3">
        © 2024 Copyright:
        <a class="text-white">
            BFP Tech. Todos os direitos reservados.
            Endereço: Rua Exemplo, 123 - Cidade, Estado
            Email: contato@pfptech.com.br
        </a>
    </div>
</footer>

@code {
    private string searchId = string.Empty;
    private List<Models.Alunos> chamadasFiltradas = new();
    List<Models.Alunos> chamadas = new global::System.Collections.Generic.List<global::ProjetoBFP.Models.Alunos>();

    private void FiltrarChamadas()
    {
        if (string.IsNullOrWhiteSpace(searchId))
        {
            chamadasFiltradas = chamadas;
        }
        else
        {
            chamadasFiltradas = chamadas.Where(c => c.AlunoId.ToString() == searchId).ToList();
        }
    }

    private void LimparFiltro()
    {
        searchId = string.Empty;
        chamadasFiltradas = chamadas;
    }

    protected override async Task OnInitializedAsync()
    {
        chamadas = await chamadaClient.GetChamadas();
        chamadasFiltradas = chamadas;
    }
}